plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
 	id "com.github.node-gradle.node" version "7.0.2"
}

group = 'com.jccs'
version = '0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'	
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	//annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	
	testImplementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:oracle-xe:1.19.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyWebApp', Copy) {
 from "$projectDir/frontend/dist"
 into "$buildDir/resources/main/static/."
}

tasks.named('processResources') {
 dependsOn('copyWebApp')
}


// Configure the plugin to download and use specific Node version
node {
    download = true
    version = "20.11.1"
}

//Register NpmTask that will do what "npm run build" command does.
tasks.register('npmBuild', NpmTask) {
	workingDir = file("$projectDir/frontend")
    args = [ 'run', 'build' ]
}

tasks.named('assemble') {
 dependsOn('npmBuild')
}